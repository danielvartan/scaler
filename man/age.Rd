% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/age.R
\name{age}
\alias{age}
\title{Compute year age}
\usage{
age(birth_date, reference_date = base::Sys.Date(), round = FALSE)
}
\arguments{
\item{birth_date}{A \code{\link[base:Dates]{Date}} object with}

\item{reference_date}{(optional) a \code{\link[base:Dates]{Date}} or
\code{\link[base:DateTimeClasses]{POSIXt}} object indicating a reference date
(default: \code{base::Sys.Date()}).}

\item{round}{(optional) a \code{\link[=logical]{logical}} value indicating if the
the funtion must return a rounded year age.}
}
\value{
A \code{\link[base:numeric]{numeric}} object with a year age.
}
\description{
\

\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

\code{age()} computes the year age of a person considering a reference date point.
}
\examples{
## Scalar example

birth_date <- lubridate::as_date("2000-01-01")
reference_date <- lubridate::as_date("2020-01-01")
age(birth_date, reference_date, round = FALSE)
#> [1] 19.99722 # Expected
age(birth_date, reference_date, round = TRUE)
#> [1] 20

# Note that some years are not equal to exactly 365 days.

## Vector example

birth_date <- lubridate::as_date(c(
    "1800-01-01", "1900-01-01", "2000-01-01"
    ))
reference_date <- lubridate::as_date("2020-01-01") # length == 1
age(birth_date, reference_date)
#> [1] 220.00000 120.00000  19.99722 # Expected

birth_date <- lubridate::as_date(c(
    "1800-01-01", "1900-01-01", "2000-01-01"
    ))
reference_date <- lubridate::as_date(c( # same length as `birth_date`
    "1900-01-01", "2000-01-01", "2020-01-01"
    ))
age(birth_date, reference_date)
#> [1] 100.00000 100.00000  19.99722 # Expected
}
\concept{utility functions}
